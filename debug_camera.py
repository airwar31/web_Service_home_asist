import cv2
import numpy as np

def debug_camera():
    """–û—Ç–ª–∞–¥–∫–∞ –∫–∞–º–µ—Ä—ã —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –∫–∞—á–µ—Å—Ç–≤–∞ –∫–∞–¥—Ä–∞"""
    cap = cv2.VideoCapture(0)
    
    if not cap.isOpened():
        print("‚ùå –ö–∞–º–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    print("üìπ –û—Ç–ª–∞–¥–∫–∞ –∫–∞–º–µ—Ä—ã (–Ω–∞–∂–º–∏—Ç–µ 'q' –¥–ª—è –≤—ã—Ö–æ–¥–∞)")
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–∞–¥—Ä–æ–≤...")
    
    while True:
        ret, frame = cap.read()
        
        if not ret or frame is None:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–∞–¥—Ä")
            continue
        
        # –ê–Ω–∞–ª–∏–∑ –∫–∞–¥—Ä–∞
        gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
        mean_brightness = np.mean(gray)
        variance = np.var(gray)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞
        is_too_dark = mean_brightness < 10
        is_monotone = variance < 100
        is_valid = not (is_too_dark or is_monotone)
        
        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        info_text = [
            f"–Ø—Ä–∫–æ—Å—Ç—å: {mean_brightness:.1f}",
            f"–í–∞—Ä–∏–∞—Ü–∏—è: {variance:.1f}",
            f"–°—Ç–∞—Ç—É—Å: {'‚úÖ –í–ê–õ–ò–î–ù–´–ô' if is_valid else '‚ùå –ù–ï–í–ê–õ–ò–î–ù–´–ô'}",
        ]
        
        if is_too_dark:
            info_text.append("‚ö†Ô∏è –°–õ–ò–®–ö–û–ú –¢–ï–ú–ù–û")
        if is_monotone:
            info_text.append("‚ö†Ô∏è –û–î–ù–û–¢–û–ù–ù–´–ô")
        
        # –†–∏—Å—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω–∞ –∫–∞–¥—Ä–µ
        y_offset = 30
        for text in info_text:
            color = (0, 255, 0) if is_valid else (0, 0, 255)
            cv2.putText(frame, text, (10, y_offset), 
                       cv2.FONT_HERSHEY_SIMPLEX, 0.7, color, 2)
            y_offset += 30
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–¥—Ä
        cv2.imshow('Camera Debug', frame)
        
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break
    
    cap.release()
    cv2.destroyAllWindows()
    print("‚úÖ –û—Ç–ª–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

if __name__ == "__main__":
    debug_camera()